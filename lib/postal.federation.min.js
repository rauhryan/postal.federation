/*
 postal.federation
 Copyright (C) 2012 - Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT & GPL v2.0
 Version 0.2.0
 */
(function(n,e){"object"==typeof module&&module.exports?module.exports=function(n,t,i){return e(n,t,i)}:"function"==typeof define&&define.amd?define(["underscore","postal","riveter"],function(t,i,o){return e(t,i,o,n)}):n.postal=e(n._,n.postal,n.riveter,n)})(this,function(n,e,t,i,o){e.utils.createUUID||(e.utils.createUUID=function(){for(var n=[],e="0123456789abcdef",t=0;36>t;t++)n[t]=e.substr(Math.floor(16*Math.random()),1);return n[14]="4",n[19]=e.substr(8|3&n[19],1),n[8]=n[13]=n[18]=n[23]="-",n.join("")}),e.instanceId||(e.instanceId=function(){var n,t;return function(i){return i&&(t=n,n=i,e.publish({channel:e.configuration.SYSTEM_CHANNEL,topic:"instanceId.changed",data:{oldId:t,newId:n}})),n}}());var s=function(){},c=!1,a=[],r=[],d=[],p={enabled:!0,filterMode:"whitelist",filterDirection:"both"},l=p,u={ping:function(){return{type:"federation.ping",instanceId:e.instanceId(),timeStamp:new Date,ticket:e.utils.createUUID()}},pong:function(n){return{type:"federation.pong",instanceId:e.instanceId(),timeStamp:new Date,pingData:{instanceId:n.instanceId,timeStamp:n.timeStamp,ticket:n.ticket}}},disconnect:function(){return{type:"federation.disconnect",instanceId:e.instanceId(),timeStamp:new Date,envelope:{}}},message:function(n){return{type:"federation.message",instanceId:e.instanceId(),timeStamp:new Date,envelope:n}},bundle:function(n){return{type:"federation.bundle",instanceId:e.instanceId(),timeStamp:new Date,packingSlips:n}}},f={"federation.ping":function(n){n.source.instanceId=n.packingSlip.instanceId,n.source.handshakeComplete?n.source.sendPong(n.packingSlip):n.source.sendBundle([e.fedx.getPackingSlip("pong",n.packingSlip),e.fedx.getPackingSlip("ping")])},"federation.pong":function(t){t.source.handshakeComplete=!0,t.source.instanceId=t.packingSlip.instanceId,t.source.pings[t.packingSlip.pingData.ticket]&&(t.source.pings[t.packingSlip.pingData.ticket].callback({ticket:t.packingSlip.pingData.ticket,instanceId:t.packingSlip.instanceId,source:t.source}),t.source.pings[t.packingSlip.pingData.ticket]=o),n.contains(e.fedx.clients,t.packingSlip.instanceId)||e.fedx.clients.push(t.packingSlip.instanceId),e.publish({channel:"postal.federation",topic:"client.federated",data:{remoteId:t.source.instanceId,localId:e.instanceId(),transport:t.transport}})},"federation.disconnect":function(n){console.log(n)},"federation.message":function(n){var t=n.packingSlip.envelope;h(t.channel,t.topic,"inbound")&&(t.lastSender=n.packingSlip.instanceId,e.publish(t))},"federation.bundle":function(t){n.each(t.packingSlip.packingSlips,function(i){e.fedx.onFederatedMsg(n.extend({},t,{packingSlip:i}))})}},h=function(t,i,o){var s=e.fedx.filters[o].hasOwnProperty(t),c=s&&n.any(e.fedx.filters[o][t],function(n){return e.configuration.resolver.compare(n,i)}),a="blacklist"===l.filterMode;return l.enabled&&(a&&(!s||s&&!c)||!a&&s&&c)},g=function(n,e,t){this.transportName=o,this.target=n,this.options=e||{},this.pings={},this.instanceId=t,this.handshakeComplete=!1};return g.prototype.sendPing=function(n){var t=e.fedx.getPackingSlip("ping");this.pings[t.ticket]={ticket:t.ticket,callback:n||s},this.send(t)},g.prototype.sendPong=function(n){this.send(e.fedx.getPackingSlip("pong",n))},g.prototype.sendBundle=function(n){this.send(e.fedx.getPackingSlip("bundle",n))},g.prototype.sendMessage=function(t){if(this.handshakeComplete){t.originId=t.originId||e.instanceId();var i=n.clone(t);!this.instanceId||this.instanceId===i.lastSender||i.knownIds&&i.knownIds.length&&(!i.knownIds||n.include(i.knownIds,this.instanceId))||(i.knownIds=(i.knownIds||[]).concat(n.without(e.fedx.clients,this.instanceId)),this.send(e.fedx.getPackingSlip("message",i)))}},g.prototype.sendDisconnect=function(){this.disconnect(e.fedx.getPackingSlip("disconnect"))},g.prototype.onMessage=function(n){this.shouldProcess()&&e.fedx.onFederatedMsg({transport:this.transportName,packingSlip:n,source:this})},g.prototype.shouldProcess=function(){return!0},g.prototype.send=function(){throw Error("An object deriving from FederationClient must provide an implementation for 'send'.")},t(g),e.fedx=n.extend({FederationClient:g,clients:[],transports:{},filters:{inbound:{},outbound:{}},addFilter:function(e){e=n.isArray(e)?e:[e],n.each(e,function(e){e.direction=e.direction||l.filterDirection,n.each("both"===e.direction?["inbound","outbound"]:[e.direction],function(t){this.filters[t][e.channel]?n.include(this.filters[t][e.channel],e.topic)||this.filters[t][e.channel].push(e.topic):this.filters[t][e.channel]=[e.topic]},this)},this)},removeFilter:function(e){e=n.isArray(e)?e:[e],n.each(e,function(e){e.direction=e.direction||l.filterDirection,n.each("both"===e.direction?["inbound","outbound"]:[e.direction],function(t){this.filters[t][e.channel]&&n.include(this.filters[t][e.channel],e.topic)&&(this.filters[t][e.channel]=n.without(this.filters[t][e.channel],e.topic))},this)},this)},canSendRemote:function(n,e){return h(n,e,"outbound")},configure:function(e){if(e&&e.filterMode&&"blacklist"!==e.filterMode&&"whitelist"!==e.filterMode)throw Error("postal.fedx filterMode must be 'blacklist' or 'whitelist'.");return e&&(l=n.defaults(e,p)),l},getPackingSlip:function(n){return u.hasOwnProperty(n)?u[n].apply(this,Array.prototype.slice.call(arguments,1)):o},onFederatedMsg:function(n){if(!c)return a.push(n),o;if(!f.hasOwnProperty(n.packingSlip.type))throw Error("postal.federation does not have a message handler for '"+n.packingSlip.type+"'.");f[n.packingSlip.type](n)},sendMessage:function(e){return c?(n.each(this.transports,function(n){n.sendMessage(e)}),o):(r.push(arguments),o)},signalReady:function(e,t){if(!c)return d.push(arguments),o;switch(arguments.length){case 0:e=n.reduce(this.transports,function(n,e,t){return n[t]=!0,n},{});break;case 1:"function"==typeof e&&(t=e,e=n.reduce(this.transports,function(n,e,t){return n[t]=!0,n},{}))}"[object String]"===Object.prototype.toString.call(e)?this.transports[e].signalReady([],t):n.each(e||this.transports,function(n,e){n="[object Boolean]"===Object.prototype.toString.call(n)?[]:n,this.transports[e].signalReady(n,t)},this)}},e.fedx),e.addWireTap(function(n,t){e.fedx.canSendRemote(t.channel,t.topic)&&e.fedx.sendMessage(t)}),e.subscribe({channel:e.configuration.SYSTEM_CHANNEL,topic:"instanceId.changed",callback:function(){for(c=!0;d.length;)(function(n){e.fedx.signalReady.apply(this,n)})(d.shift());for(;r.length;)(function(n){e.fedx.send.apply(this,n)})(r.shift());for(;a.length;)(function(n){e.fedx.onFederatedMsg.call(this,n)})(a.shift())}}),e.instanceId()!==o&&(c=!0),e});